Donwload and install Node.js
npm to create the package.json

----------

Install gulp at the project: npm install gulp@3.9.0 --save-dev
without @3.9.0 it will download the last version
--save-dev = development dependency, only exists at dev environment, will be added at devDependecies
--save = will be added at dependecies

npm install will install all the dependencies

----------

if you call gulp from the command line it will not execute, because the binary in inside node_modules
you can install gulp in a global mode, but a better way is to add a script tag at your package.json pointing to gulp
"scripts": {
    "gulp": "gulp"
}

and run with: npm run gulp

----------

You must create a gulpfile.js at your projects's root folder and import gulp
var gulp = require('gulp');

----------

Image minifier plugin/module
npm install gulp-imagemin@2.3.0 --save-dev

----------

gulp.src('src/img/**/*') // all the files from this input
	.pipe(imagemin()) // will connect(pipe) with the imagemin 
	.pipe(gulp.dest('src/img')) // and the result of imagemin will go out here

/**/* = every file from every directory (glob pattern)
----------

every code must be inside a task:
gulp.task('taskname', function() {
	// callback function code
});

npm run gulp taskname

----------

second parameter is the dependecies task to execute before
gulp.task('taskname', ['task1', 'task2', ...], function() {

});

----------

All tasks are async!!!

If there is a chain of tasks, you must return the stream at the dependents to avoid async error.

----------

can be used as meta tags to replace codes from html
<!-- build:js --> 
	replace
<!-- endbuild -->


----------

HTTP 1.X there is limit of concurrent requests for the same domain. So, other resources should wait.
HTTP 2.X it is minimized with a single connection that will download many resources, it is called multiplexing


----------

browsersync is magic!
It syncs all the connected clients on every event on the page. (liverealoading 1 to N)

Using browsersync with other servers:
gulp.task('server', function() {
    browserSync.init({
        server: {
            proxy: "localhost:3000"
        }
    });

    gulp.watch('src/**/*').on('change', browserSync.reload);

});
Now we do not need to use baseDir anymore.
When we run the server task, the browser will open automaticaly but the port will be added 1: http://localhost:3001